// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoADS1.Data;

#nullable disable

namespace ProyectoADS1.Migrations
{
    [DbContext(typeof(DBADS1Context))]
    partial class DBADS1ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProyectoADS1.Models.ActaInspeccion", b =>
                {
                    b.Property<int>("IdInspeccion")
                        .HasColumnType("int");

                    b.Property<string>("Conclusiones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaAdministradoImagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmaSupervisorImagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recomendaciones")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdInspeccion")
                        .HasName("PK__ActaInsp__2929253F64C3558B");

                    b.ToTable("ActaInspeccion");
                });

            modelBuilder.Entity("ProyectoADS1.Models.Concesionario", b =>
                {
                    b.Property<int>("IdConcesionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdConcesionario"));

                    b.Property<string>("Departamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Distrito")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateOnly>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("RUC")
                        .IsFixedLength();

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdConcesionario")
                        .HasName("PK__Concesio__49EF4257A6FA8DDD");

                    b.ToTable("Concesionario");

                    b.HasData(
                        new
                        {
                            IdConcesionario = 1,
                            Departamento = "Lima",
                            Direccion = "Av. Arequipa 1234",
                            Distrito = "Miraflores",
                            Email = "contacto@postalexpress.com",
                            Estado = false,
                            FechaRegistro = new DateOnly(1, 1, 1),
                            NombreComercial = "Postal Express",
                            Provincia = "Lima",
                            RazonSocial = "Concesionaria Postal Express S.A.C.",
                            Ruc = "20451234567",
                            Telefono = "012345678"
                        },
                        new
                        {
                            IdConcesionario = 2,
                            Departamento = "Arequipa",
                            Direccion = "Calle Comercio 456",
                            Distrito = "Cercado",
                            Email = "info@redcourier.pe",
                            Estado = false,
                            FechaRegistro = new DateOnly(1, 1, 1),
                            NombreComercial = "Red Courier",
                            Provincia = "Arequipa",
                            RazonSocial = "Red Courier Perú E.I.R.L.",
                            Ruc = "20567891234",
                            Telefono = "054987654"
                        },
                        new
                        {
                            IdConcesionario = 3,
                            Departamento = "Cusco",
                            Direccion = "Jr. Cusco 321",
                            Distrito = "Wanchaq",
                            Email = "contacto@andespost.com",
                            Estado = false,
                            FechaRegistro = new DateOnly(1, 1, 1),
                            NombreComercial = "Andes Post",
                            Provincia = "Cusco",
                            RazonSocial = "Servicios Postales Andes S.R.L.",
                            Ruc = "20678912345",
                            Telefono = "084567890"
                        });
                });

            modelBuilder.Entity("ProyectoADS1.Models.FichaInspeccion", b =>
                {
                    b.Property<int>("IdInspeccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInspeccion"));

                    b.Property<string>("AreaSupervisada")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Departamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)")
                        .HasDefaultValue("Pendiente");

                    b.Property<DateTime?>("FechaActualizada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly>("FechaProgramada")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdConcesionario")
                        .HasColumnType("int");

                    b.Property<string>("MotivoInspeccion")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ruc")
                        .IsRequired()
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("char(11)")
                        .HasColumnName("RUC")
                        .IsFixedLength();

                    b.Property<string>("Telefono")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdInspeccion")
                        .HasName("PK__FichaIns__2929253F94084335");

                    b.HasIndex("IdConcesionario");

                    b.ToTable("FichaInspeccion");

                    b.HasData(
                        new
                        {
                            IdInspeccion = 1,
                            AreaSupervisada = "Almacén Principal",
                            Departamento = "Lambayeque",
                            Direccion = "Av. Central 123",
                            Email = "norte@correo.pe",
                            FechaProgramada = new DateOnly(2025, 5, 10),
                            IdConcesionario = 1,
                            MotivoInspeccion = "Supervisión rutinaria del local",
                            NombreComercial = "Correo Norte SAC",
                            Provincia = "Chiclayo",
                            RazonSocial = "Correo Norte S.A.C.",
                            Ruc = "20481234567",
                            Telefono = "074-123456"
                        });
                });

            modelBuilder.Entity("ProyectoADS1.Models.InformeInspeccion", b =>
                {
                    b.Property<int>("IdInspeccion")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("FirmaCoordinador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("FirmaSupervisor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdInspeccion")
                        .HasName("PK__InformeI__2929253F400F5D12");

                    b.HasIndex("IdUsuario");

                    b.ToTable("InformeInspeccion");
                });

            modelBuilder.Entity("ProyectoADS1.Models.MemorandumInspeccion", b =>
                {
                    b.Property<int>("IdMemo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMemo"));

                    b.Property<string>("Asunto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Cuerpo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("FechaActualizada")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool?>("FirmaCoordinador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("FirmaCoordinadorGeneral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool?>("FirmaDirectorGeneral")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("IdInspeccion")
                        .HasColumnType("int");

                    b.HasKey("IdMemo")
                        .HasName("PK__Memorand__4D7D50869C42DFBC");

                    b.HasIndex(new[] { "IdInspeccion" }, "UQ__Memorand__2929253E6844E20C")
                        .IsUnique();

                    b.ToTable("MemorandumInspeccion");
                });

            modelBuilder.Entity("ProyectoADS1.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<bool?>("Activo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("activo");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("correo");

                    b.Property<int>("Dni")
                        .HasColumnType("int")
                        .HasColumnName("dni");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombreUsuario");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("usuario")
                        .HasColumnName("rol");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6DDB296B6");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            IdUsuario = 1,
                            Activo = true,
                            Correo = "admincsp@empresa.com",
                            Dni = 73613466,
                            NombreUsuario = "Anderson Villegas Cruz",
                            Password = "admin123",
                            Rol = "CoordinadorCSP"
                        });
                });

            modelBuilder.Entity("ProyectoADS1.Models.ActaInspeccion", b =>
                {
                    b.HasOne("ProyectoADS1.Models.FichaInspeccion", "IdInspeccionNavigation")
                        .WithOne("ActaInspeccion")
                        .HasForeignKey("ProyectoADS1.Models.ActaInspeccion", "IdInspeccion")
                        .IsRequired()
                        .HasConstraintName("FK__ActaInspe__IdIns__04E4BC85");

                    b.Navigation("IdInspeccionNavigation");
                });

            modelBuilder.Entity("ProyectoADS1.Models.FichaInspeccion", b =>
                {
                    b.HasOne("ProyectoADS1.Models.Concesionario", "IdConcesionarioNavigation")
                        .WithMany("FichaInspeccions")
                        .HasForeignKey("IdConcesionario")
                        .IsRequired()
                        .HasConstraintName("FK__FichaInsp__IdCon__5EBF139D");

                    b.Navigation("IdConcesionarioNavigation");
                });

            modelBuilder.Entity("ProyectoADS1.Models.InformeInspeccion", b =>
                {
                    b.HasOne("ProyectoADS1.Models.FichaInspeccion", "IdInspeccionNavigation")
                        .WithOne("InformeInspeccion")
                        .HasForeignKey("ProyectoADS1.Models.InformeInspeccion", "IdInspeccion")
                        .IsRequired()
                        .HasConstraintName("FK__InformeIn__IdIns__2CF2ADDF");

                    b.HasOne("ProyectoADS1.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("InformeInspeccions")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__InformeIn__IdUsu__2DE6D218");

                    b.Navigation("IdInspeccionNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("ProyectoADS1.Models.MemorandumInspeccion", b =>
                {
                    b.HasOne("ProyectoADS1.Models.FichaInspeccion", "IdInspeccionNavigation")
                        .WithOne("MemorandumInspeccion")
                        .HasForeignKey("ProyectoADS1.Models.MemorandumInspeccion", "IdInspeccion")
                        .IsRequired()
                        .HasConstraintName("FK__Memorandu__IdIns__498EEC8D");

                    b.Navigation("IdInspeccionNavigation");
                });

            modelBuilder.Entity("ProyectoADS1.Models.Concesionario", b =>
                {
                    b.Navigation("FichaInspeccions");
                });

            modelBuilder.Entity("ProyectoADS1.Models.FichaInspeccion", b =>
                {
                    b.Navigation("ActaInspeccion");

                    b.Navigation("InformeInspeccion");

                    b.Navigation("MemorandumInspeccion");
                });

            modelBuilder.Entity("ProyectoADS1.Models.Usuario", b =>
                {
                    b.Navigation("InformeInspeccions");
                });
#pragma warning restore 612, 618
        }
    }
}
